Checks: >
  clang-analyzer-*,
  bugprone-*,
  performance-*,
  modernize-*,
  readability-*,
  misc-*,
  cppcoreguidelines-*,
  portability-*,
  -fuchsia-*,
  -llvm-*,
  -hicpp-*,
  -google-*,
  -android-*,
  -abseil-*,
  -modernize-use-trailing-return-type

WarningsAsErrors: ''   # don’t fail build yet; can tighten later

HeaderFilterRegex: '^/Users/scottnovak/Projects/SensorApp/(src|include)/'   # only lint your code, not externals
SystemHeaders: false
FormatStyle: file                      # respect your .clang-format if present

CheckOptions:
  # --- Modernize tweaks ---
  - key: modernize-use-trailing-return
    value: false

  # --- CppCoreGuidelines tweaks ---
  - key: cppcoreguidelines-pro-type-member-init
    value: true

  - key: misc-include-cleaner.IgnoreHeaders
    value: 'unistd.h,sys/types.h'


  # --- Naming conventions ---
  - key: readability-identifier-naming.VariableCase
    value: camelBack
  - key: readability-identifier-naming.GlobalVariableCase
    value: camelBack
  - key: readability-identifier-naming.FunctionCase
    value: camelBack
  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase

  # Structs → public data fields in camelBack (no underscores)
  - key: readability-identifier-naming.StructMemberCase
    value: camelBack
  - key: readability-identifier-naming.StructMemberSuffix
    value: ''

  # Classes → private members in camelBack with trailing underscore
  - key: readability-identifier-naming.PrivateMemberCase
    value: camelBack
  - key: readability-identifier-naming.PrivateMemberSuffix
    value: '_'

  # Constants and macros
  - key: readability-identifier-naming.ClassConstantCase
    value: CamelCase
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE

