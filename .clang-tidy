Checks: >
  clang-analyzer-*,
  bugprone-*,
  performance-*,
  modernize-*,
  readability-*,
  misc-*,
  cppcoreguidelines-*,
  portability-*,
  -fuchsia-*,
  -llvm-*,
  -hicpp-*,
  -google-*,
  -android-*,
  -abseil-*,
  -modernize-use-trailing-return-type

WarningsAsErrors: ''   # don’t fail build yet; can tighten later

HeaderFilterRegex: '^(src|include)/'   # only lint your code, not externals
FormatStyle: file                      # respect your .clang-format if present

CheckOptions:
  # --- Modernize tweaks ---
  - key: modernize-use-trailing-return
    value: false

  # --- CppCoreGuidelines tweaks ---
  - key: cppcoreguidelines-pro-type-member-init
    value: true

  # --- Naming conventions ---
  - key: readability-identifier-naming.VariableCase
    value: camelBack
  - key: readability-identifier-naming.GlobalVariableCase
    value: camelBack
  - key: readability-identifier-naming.MemberCase
    value: camelBack

  - key: readability-identifier-naming.FunctionCase
    value: camelBack

  - key: readability-identifier-naming.ClassCase
    value: CamelCase
  - key: readability-identifier-naming.StructCase
    value: CamelCase
  - key: readability-identifier-naming.EnumCase
    value: CamelCase

  # Local consts (inside a function) → camelCase
  - key: readability-identifier-naming.LocalConstantCase
    value: camelBack

  # Global constants (namespace scope) → UPPER_CASE
  - key: readability-identifier-naming.GlobalConstantCase
    value: UPPER_CASE

  # Member constants (static const inside a class) → CamelCase or camelBack, your choice
  - key: readability-identifier-naming.ClassConstantCase
    value: CamelCase
  - key: readability-identifier-naming.MacroDefinitionCase
    value: UPPER_CASE
